{"version":3,"sources":["assets/images/noPoster.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","Grid","Section","title","children","role","aria-label","Text","span","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Loader","Helmet","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TV","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","Search","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Data","h1","ItemContainer","Item","Divider","Overview","p","Cover","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","pathname","location","includes","match","push","history","parseId","parseInt","isNaN","console","log","Header","Styled","header","List","ul","li","current","SLink","Link","withRouter","path","exact","component","Home","Detail","from","GlobalStyles","createGlobalStyle","reset","App","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.177d3917.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPoster.fc7ece8e.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child){\n        margin-bottom: 15px;\n    }\n`;\nconst Title = styled.div`\n    font-size: 16px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            🕛\n        </span>\n    </Container>\n);","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.2s linear;\n`;\n\nconst Rating = styled.span`\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n    opacity: 0;\n    transition: opacity 0.2s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover{\n        ${Image}{\n            opacity: 0.3;\n        }\n        ${Rating}{\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}`:`/show/${id}`}>\n        <Container>\n            <ImageContainer>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require(\"../assets/images/noPoster.jpg\")} />\n                <Rating>\n                    <span role=\"img\" aria-label=\"rating\">\n                        ⭐\n                    </span>{\" \"}\n                    {rating}/10\n                </Rating>\n            </ImageContainer>\n            <Title>{title.length > 18 ? `${title.substring(0, 18)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n)\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string\n};\n\nexport default Poster;","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => loading ? <Loader /> : (\n    <Container>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n                {nowPlaying.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n                {upcoming.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n                {popular.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying : PropTypes.array,\n    upcoming : PropTypes.array,\n    popular : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"e9feeb75c5355f39efd0fda6478cab35\",\n        language : \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) => api.get(`tv/${id}`, {\n        append_to_response: \"videos\"\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n}\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount() {\n        try {\n            const { data: { results: nowPlaying } } = await moviesApi.nowPlaying();\n            const { data: { results: upcoming } } = await moviesApi.upcoming();\n            const { data: { results: popular } } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular\n            });\n\n        } catch {\n            this.setState({\n                error: \"Can't find movies information.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying} \n                upcoming={upcoming} \n                popular={popular} \n                error={error}\n                loading={loading}\n            />\n        )\n    };\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => loading ? <Loader /> : (\n    <Container>\n        <Helmet>\n            <title>TV Shows | Nomflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n                {topRated.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />       \n                )}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n                {popular.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />                 \n                )}\n            </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today Shows\">\n                {airingToday.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    /> \n                )}\n            </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n);\n\nTVPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default TVPresenter;","import TV from \"./TVContainer\";\n\nexport default TV;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component{\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: null,\n        error: null,\n    };\n\n    async componentDidMount() {\n        try {\n            const { data: { results : topRated }} = await tvApi.topRated();\n            const { data: { results : popular }} = await tvApi.popular();\n            const { data: { results : airingToday }} = await tvApi.airingToday();\n            this.setState({ topRated, popular, airingToday });\n        } catch {\n            this.setState({\n                error: \"Can't find movie infoarmation.\"\n            });\n        } finally {\n            this.setState({\n                loading: false\n            });\n        }\n    };\n\n    render() {\n        const { topRated, popular, airingToday, loading, error } = this.state;\n\n        return (\n            <TVPresenter \n                topRated={topRated}\n                popular={popular}\n                airingToday={airingToday}\n                loading={loading}\n                error={error}\n            />\n        )\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Section from \"../../Components/Section\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm }) => (\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input \n                placeholder=\"Search Movies or TV Shows...\" \n                value={searchTerm} \n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? <Loader /> : <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        /> \n                    ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"TV Show Results\">\n                    {tvResults.map(show => (\n                        <Poster \n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie={false}\n                        />              \n                    ))}\n                </Section>\n            )}\n        </>}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message text={`Nothing Found`} color=\"#95a5a6\" />}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults : PropTypes.array,\n    tvResults : PropTypes.array,\n    searchTerm : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import Search from \"./SearchContainer\";\n\nexport default Search;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null,\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const { target: { value } } = event;\n        this.setState({\n            searchTerm: value\n        });\n    };\n            \n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n\n        try {\n            this.setState({ loading : true });\n            const { data : { results : movieResults }} = await moviesApi.search(searchTerm);\n            const { data : { results : tvResults }} = await tvApi.search(searchTerm);\n            this.setState({ movieResults, tvResults });\n        } catch {\n            this.setState({ error: \"Can't find results \"});\n        } finally {\n            this.setState({ loading : false });\n        }\n    };\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n\n        return (\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    };\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    position: relative;\n    z-index: 1;\n    height: 100%; \n`;\n\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h1`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin: 20px 0px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0px 10px;\n`;\n\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) => (\n    loading ? (\n        <Loader />\n    ) : (\n        <Container>\n            <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n            <Content>\n                <Cover bgImage={result.poster_path ? `https://image.tmdb.org/t/p/original${result.poster_path}` : require(\"../../assets/images/noPoster.jpg\")}/>\n                <Data>\n                    <Title>{result.original_title ? result.original_title : result.original_name}</Title>\n                    <ItemContainer>\n                        <Item>{result.release_date ? result.release_date.substring(0, 4) : result.first_air_date.substring(0, 4)}</Item>\n                        <Divider>ㆍ</Divider>\n                        <Item>{result.runtime ? result.runtime : result.episode_run_time}</Item> min\n                        <Divider>ㆍ</Divider>\n                        <Item>{result.genres && result.genres.map((genre, index) => index === result.genres.length-1 ? genre.name : `${genre.name} / `)}</Item>\n                    </ItemContainer>\n                    <Overview>{result.overview}</Overview>\n                </Data>\n            </Content>\n        </Container>\n    )\n);\n\nDetailPresenter.propTypes = {\n    result : PropTypes.object,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n            \n        const { location: { pathname }} = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes(\"/movie/\")\n        };\n    }\n\n    async componentDidMount() {\n        const { \n            match : { params : { id }},\n            history: { push },\n        } = this.props;\n\n        const { isMovie } = this.state;\n        const parseId = parseInt(id);\n        if(isNaN(parseId)){\n            return push(\"/\");\n        }\n\n        let result = null;\n        try {\n            if(isMovie){\n                ({ data : result } = await moviesApi.movieDetail(parseId));\n            } else {\n                ({ data : result } = await tvApi.showDetail(parseId));\n            }\n            console.log(result);\n        } catch {\n            this.setState({error : \"Can't find anything.\"});\n        } finally {\n            this.setState({ loading:false, result });\n        }\n    }\n    \n    render() {\n        const { result, error, loading } = this.state;\n        return (\n            <DetailPresenter \n                result={result} \n                error={error}\n                loading={loading}\n            />\n        )\n    };\n}","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport Styled from \"styled-components\";\n\nconst Header = Styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    padding: 0px 10px;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = Styled.ul`\n    display: flex;\n    text-align: center;\n`;\n\nconst Item = Styled.li`\n    width: 50px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition:border-bottom .5s ease-in-out;\n`;\n\nconst SLink = Styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({location: {pathname}}) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/kimflix/\"}>\n                <SLink to=\"/kimflix/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/kimflix/tv\"}>\n                <SLink to=\"/kimflix/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/kimflix/search\"}>\n                <SLink to=\"/kimflix/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\n\nimport Home from \"../Routes/Home\"\nimport TV from \"../Routes/TV\"\nimport Search from \"../Routes/Search\";\nimport Detail from \"../Routes/Detail\";\n\nimport Header from './Header';\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/kimflix/\" exact component={ Home } />\n                <Route path=\"/kimflix/tv\" exact component={ TV } />\n                <Route path=\"/kimflix/search\" exact component={ Search } />\n                <Route path=\"/kimflix/movie/:id\" component={ Detail } />\n                <Route path=\"/kimflix/show/:id\" component={ Detail } />\n                <Redirect from=\"*\" to=\"/kimflix/\" />\n            </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration:none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color: white;\n        padding-top:50px;\n    }\n`;\n\nexport default GlobalStyles;","import React, {Component} from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}