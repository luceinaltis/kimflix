{"ast":null,"code":"var _jsxFileName = \"/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nconst Container = styled.div`\n    padding: 0px 10px;\n`;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  loading,\n  error\n}) => loading ? /*#__PURE__*/React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 87\n  }\n}) : /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, topRated && topRated.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Top Rated Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }\n}, topRated.map(show => /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 39\n  }\n}, show.name))), popular && popular.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Popular Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, popular.map(show => /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 38\n  }\n}, show.name))), airingToday && airingToday.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Airing Today Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 17\n  }\n})), error && /*#__PURE__*/React.createElement(Message, {\n  text: error,\n  color: \"#e74c3c\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 19\n  }\n}));\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","name","movie","id","poster_path","original_title","vote_average","release_date","substring","propTypes","array","bool","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,OAAP,MAAoB,oBAApB;AAEA,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;;CAA7B;;AAIA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,WAArB;AAAkCC,EAAAA,OAAlC;AAA2CC,EAAAA;AAA3C,CAAD,KAAwDD,OAAO,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAH,gBAC/E,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKH,QAAQ,IAAIA,QAAQ,CAACK,MAAT,GAAkB,CAA9B,iBACG,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKL,QAAQ,CAACM,GAAT,CAAaC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAI,CAACC,IAAZ,CAArB,CADL,CAFR,EAMKP,OAAO,IAAIA,OAAO,CAACI,MAAR,GAAiB,CAA5B,iBACG,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACKJ,OAAO,CAACK,GAAR,CAAYC,IAAI,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOA,IAAI,CAACC,IAAZ,CAApB,CADL,CAPR,EAWKN,WAAW,IAAIA,WAAW,CAACG,MAAZ,GAAqB,CAApC,iBACG,oBAAC,OAAD;AAAS,EAAA,KAAK,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,MAAD;AACI,EAAA,GAAG,EAAEI,KAAK,CAACC,EADf;AAEI,EAAA,EAAE,EAAED,KAAK,CAACC,EAFd;AAGI,EAAA,QAAQ,EAAED,KAAK,CAACE,WAHpB;AAII,EAAA,KAAK,EAAEF,KAAK,CAACG,cAJjB;AAKI,EAAA,MAAM,EAAEH,KAAK,CAACI,YALlB;AAMI,EAAA,IAAI,EAAEJ,KAAK,CAACK,YAAN,IAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,EAAgC,CAAhC,CANhC;AAOI,EAAA,OAAO,EAAE,IAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CAZR,EAwBKX,KAAK,iBAAI,oBAAC,OAAD;AAAS,EAAA,IAAI,EAAEA,KAAf;AAAsB,EAAA,KAAK,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAxBd,CADJ;;AA6BAL,WAAW,CAACiB,SAAZ,GAAwB;AACpBhB,EAAAA,QAAQ,EAAGR,SAAS,CAACyB,KADD;AAEpBhB,EAAAA,OAAO,EAAGT,SAAS,CAACyB,KAFA;AAGpBf,EAAAA,WAAW,EAAGV,SAAS,CAACyB,KAHJ;AAIpBd,EAAAA,OAAO,EAAGX,SAAS,CAAC0B,IAAV,CAAeC,UAJL;AAKpBf,EAAAA,KAAK,EAAGZ,SAAS,CAAC4B;AALE,CAAxB;AAQA,eAAerB,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\n\nconst Container = styled.div`\n    padding: 0px 10px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => loading ? <Loader /> : (\n    <Container>\n        {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n                {topRated.map(show => <span>{show.name}</span>)}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n                {popular.map(show => <span>{show.name}</span>)}\n            </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today Shows\">\n                <Poster \n                    key={movie.id}\n                    id={movie.id}\n                    imageUrl={movie.poster_path}\n                    title={movie.original_title}\n                    rating={movie.vote_average}\n                    year={movie.release_date && movie.release_date.substring(0, 4)}\n                    isMovie={true}\n                /> \n            </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n);\n\nTVPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}