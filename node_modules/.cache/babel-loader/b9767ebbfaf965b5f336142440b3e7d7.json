{"ast":null,"code":"var _jsxFileName = \"/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/TV/TVPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({\n  topRated,\n  popular,\n  airingToday,\n  loading,\n  error\n}) => loading ? /*#__PURE__*/React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 87\n  }\n}) : /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }\n}, \"Movies | Nomflix\")), topRated && topRated.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Top Rated Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 13\n  }\n}, topRated.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }\n}))), popular && popular.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Popular Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }\n}, popular.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }\n}))), airingToday && airingToday.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Airing Today Shows\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 13\n  }\n}, airingToday.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }\n}))), error && /*#__PURE__*/React.createElement(Message, {\n  text: error,\n  color: \"#e74c3c\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 19\n  }\n}));\n\nTVPresenter.propTypes = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default TVPresenter;","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/TV/TVPresenter.js"],"names":["React","PropTypes","styled","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","poster_path","original_name","vote_average","first_air_date","substring","propTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => loading ? <Loader /> : (\n    <Container>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n                {topRated.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />       \n                )}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n                {popular.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />                 \n                )}\n            </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today Shows\">\n                {airingToday.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    /> \n                )}\n            </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n);\n\nTVPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}