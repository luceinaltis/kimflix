{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kihwan/Desktop/nomadCoder/kimflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    padding: 20px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import Helmet from\"react-helmet\";import Section from\"Components/Section\";import Loader from\"../../Components/Loader\";import Message from\"Components/Message\";import Poster from\"Components/Poster\";var Container=styled.div(_templateObject());var TVPresenter=function TVPresenter(_ref){var topRated=_ref.topRated,popular=_ref.popular,airingToday=_ref.airingToday,loading=_ref.loading,error=_ref.error;return loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,\"TV Shows | Nomflix\")),topRated&&topRated.length>0&&/*#__PURE__*/React.createElement(Section,{title:\"Top Rated Shows\"},topRated.map(function(show){return/*#__PURE__*/React.createElement(Poster,{key:show.id,id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4),isMovie:false});})),popular&&popular.length>0&&/*#__PURE__*/React.createElement(Section,{title:\"Popular Shows\"},popular.map(function(show){return/*#__PURE__*/React.createElement(Poster,{key:show.id,id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4),isMovie:false});})),airingToday&&airingToday.length>0&&/*#__PURE__*/React.createElement(Section,{title:\"Airing Today Shows\"},airingToday.map(function(show){return/*#__PURE__*/React.createElement(Poster,{key:show.id,id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4),isMovie:false});})),error&&/*#__PURE__*/React.createElement(Message,{text:error,color:\"#e74c3c\"}));};export default TVPresenter;","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/kimflix/src/Routes/TV/TVPresenter.js"],"names":["React","styled","Helmet","Section","Loader","Message","Poster","Container","div","TVPresenter","topRated","popular","airingToday","loading","error","length","map","show","id","poster_path","original_name","vote_average","first_air_date","substring"],"mappings":"2UAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,cAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,yBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGN,MAAM,CAACO,GAAV,mBAAf,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,UAAGC,CAAAA,QAAH,MAAGA,QAAH,CAAaC,OAAb,MAAaA,OAAb,CAAsBC,WAAtB,MAAsBA,WAAtB,CAAmCC,OAAnC,MAAmCA,OAAnC,CAA4CC,KAA5C,MAA4CA,KAA5C,OAAwDD,CAAAA,OAAO,cAAG,oBAAC,MAAD,MAAH,cAC/E,oBAAC,SAAD,mBACI,oBAAC,MAAD,mBACI,sDADJ,CADJ,CAIKH,QAAQ,EAAIA,QAAQ,CAACK,MAAT,CAAkB,CAA9B,eACG,oBAAC,OAAD,EAAS,KAAK,CAAC,iBAAf,EACKL,QAAQ,CAACM,GAAT,CAAa,SAAAC,IAAI,qBACd,oBAAC,MAAD,EACI,GAAG,CAAEA,IAAI,CAACC,EADd,CAEI,EAAE,CAAED,IAAI,CAACC,EAFb,CAGI,QAAQ,CAAED,IAAI,CAACE,WAHnB,CAII,KAAK,CAAEF,IAAI,CAACG,aAJhB,CAKI,MAAM,CAAEH,IAAI,CAACI,YALjB,CAMI,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAiC,CAAjC,CANjC,CAOI,OAAO,CAAE,KAPb,EADc,EAAjB,CADL,CALR,CAmBKZ,OAAO,EAAIA,OAAO,CAACI,MAAR,CAAiB,CAA5B,eACG,oBAAC,OAAD,EAAS,KAAK,CAAC,eAAf,EACKJ,OAAO,CAACK,GAAR,CAAY,SAAAC,IAAI,qBACb,oBAAC,MAAD,EACI,GAAG,CAAEA,IAAI,CAACC,EADd,CAEI,EAAE,CAAED,IAAI,CAACC,EAFb,CAGI,QAAQ,CAAED,IAAI,CAACE,WAHnB,CAII,KAAK,CAAEF,IAAI,CAACG,aAJhB,CAKI,MAAM,CAAEH,IAAI,CAACI,YALjB,CAMI,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAiC,CAAjC,CANjC,CAOI,OAAO,CAAE,KAPb,EADa,EAAhB,CADL,CApBR,CAkCKX,WAAW,EAAIA,WAAW,CAACG,MAAZ,CAAqB,CAApC,eACG,oBAAC,OAAD,EAAS,KAAK,CAAC,oBAAf,EACKH,WAAW,CAACI,GAAZ,CAAgB,SAAAC,IAAI,qBACjB,oBAAC,MAAD,EACI,GAAG,CAAEA,IAAI,CAACC,EADd,CAEI,EAAE,CAAED,IAAI,CAACC,EAFb,CAGI,QAAQ,CAAED,IAAI,CAACE,WAHnB,CAII,KAAK,CAAEF,IAAI,CAACG,aAJhB,CAKI,MAAM,CAAEH,IAAI,CAACI,YALjB,CAMI,IAAI,CAAEJ,IAAI,CAACK,cAAL,EAAuBL,IAAI,CAACK,cAAL,CAAoBC,SAApB,CAA8B,CAA9B,CAAiC,CAAjC,CANjC,CAOI,OAAO,CAAE,KAPb,EADiB,EAApB,CADL,CAnCR,CAiDKT,KAAK,eAAI,oBAAC,OAAD,EAAS,IAAI,CAAEA,KAAf,CAAsB,KAAK,CAAC,SAA5B,EAjDd,CADgB,EAApB,CA8DA,cAAeL,CAAAA,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\"\nimport Section from \"Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => loading ? <Loader /> : (\n    <Container>\n        <Helmet>\n            <title>TV Shows | Nomflix</title>\n        </Helmet>\n        {topRated && topRated.length > 0 && (\n            <Section title=\"Top Rated Shows\">\n                {topRated.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />       \n                )}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Shows\">\n                {popular.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    />                 \n                )}\n            </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n            <Section title=\"Airing Today Shows\">\n                {airingToday.map(show => \n                    <Poster \n                        key={show.id}\n                        id={show.id}\n                        imageUrl={show.poster_path}\n                        title={show.original_name}\n                        rating={show.vote_average}\n                        year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                        isMovie={false}\n                    /> \n                )}\n            </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n);\n\nTVPresenter.propTypes = {\n    topRated : PropTypes.array,\n    popular : PropTypes.array,\n    airingToday : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default TVPresenter;"]},"metadata":{},"sourceType":"module"}