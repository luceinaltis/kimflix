{"ast":null,"code":"var _jsxFileName = \"/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/Home/HomePresenter.js\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({\n  nowPlaying,\n  upcoming,\n  popular,\n  loading,\n  error\n}) => loading ? /*#__PURE__*/React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 88\n  }\n}) : /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Helmet, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"title\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 13\n  }\n}, \"Movies | Nomflix\")), nowPlaying && nowPlaying.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Now Playing\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 13\n  }\n}, nowPlaying.map(movie => /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 21\n  }\n}))), upcoming && upcoming.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Upcoming Movies\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }\n}, upcoming.map(movie => /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }\n}))), popular && popular.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Popular Movies\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 13\n  }\n}, popular.map(movie => /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 21\n  }\n}))), error && /*#__PURE__*/React.createElement(Message, {\n  text: error,\n  color: \"#e74c3c\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 19\n  }\n}));\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upcoming: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\nexport default HomePresenter;","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/Home/HomePresenter.js"],"names":["React","Helmet","PropTypes","styled","Section","Loader","Message","Poster","Container","div","HomePresenter","nowPlaying","upcoming","popular","loading","error","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","propTypes","array","bool","isRequired","string"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => loading ? <Loader /> : (\n    <Container>\n        <Helmet>\n            <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n            <Section title=\"Now Playing\">\n                {nowPlaying.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n            <Section title=\"Upcoming Movies\">\n                {upcoming.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {popular && popular.length > 0 && (\n            <Section title=\"Popular Movies\">\n                {popular.map(movie => (\n                    <Poster \n                        key={movie.id}\n                        id={movie.id}\n                        imageUrl={movie.poster_path}\n                        title={movie.original_title}\n                        rating={movie.vote_average}\n                        year={movie.release_date && movie.release_date.substring(0, 4)}\n                        isMovie={true}\n                    />\n                ))}\n            </Section>\n        )}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n    </Container>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying : PropTypes.array,\n    upcoming : PropTypes.array,\n    popular : PropTypes.array,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n};\n\nexport default HomePresenter;"]},"metadata":{},"sourceType":"module"}