{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/kihwan/Desktop/nomadCoder/kimflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    all: unset;\\n    font-size: 28px;\\n    width: 100%;\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    margin-bottom: 50px;\\n    width: 100%;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    padding: 0px 20px;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from\"react\";import styled from\"styled-components\";import Loader from\"Components/Loader\";import Section from\"Components/Section\";import Message from\"Components/Message\";import Poster from\"Components/Poster\";var Container=styled.div(_templateObject());var Form=styled.form(_templateObject2());var Input=styled.input(_templateObject3());var SearchPresenter=function SearchPresenter(_ref){var movieResults=_ref.movieResults,tvResults=_ref.tvResults,searchTerm=_ref.searchTerm,loading=_ref.loading,error=_ref.error,handleSubmit=_ref.handleSubmit,updateTerm=_ref.updateTerm;return/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(Input,{placeholder:\"Search Movies or TV Shows...\",value:searchTerm,onChange:updateTerm})),loading?/*#__PURE__*/React.createElement(Loader,null):/*#__PURE__*/React.createElement(React.Fragment,null,movieResults&&movieResults.length>0&&/*#__PURE__*/React.createElement(Section,{title:\"Movie Results\"},movieResults.map(function(movie){return/*#__PURE__*/React.createElement(Poster,{key:movie.id,id:movie.id,imageUrl:movie.poster_path,title:movie.original_title,rating:movie.vote_average,year:movie.release_date&&movie.release_date.substring(0,4),isMovie:true});})),tvResults&&tvResults.length>0&&/*#__PURE__*/React.createElement(Section,{title:\"TV Show Results\"},tvResults.map(function(show){return/*#__PURE__*/React.createElement(Poster,{key:show.id,id:show.id,imageUrl:show.poster_path,title:show.original_name,rating:show.vote_average,year:show.first_air_date&&show.first_air_date.substring(0,4),isMovie:false});}))),error&&/*#__PURE__*/React.createElement(Message,{text:error,color:\"#e74c3c\"}),tvResults&&movieResults&&tvResults.length===0&&movieResults.length===0&&/*#__PURE__*/React.createElement(Message,{text:\"Nothing Found\",color:\"#95a5a6\"}));};export default SearchPresenter;","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/kimflix/src/Routes/Search/SearchPresenter.js"],"names":["React","styled","Loader","Section","Message","Poster","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","loading","error","handleSubmit","updateTerm","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","show","original_name","first_air_date"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,oBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CAEA,GAAMC,CAAAA,SAAS,CAAGL,MAAM,CAACM,GAAV,mBAAf,CAIA,GAAMC,CAAAA,IAAI,CAAGP,MAAM,CAACQ,IAAV,oBAAV,CAKA,GAAMC,CAAAA,KAAK,CAAGT,MAAM,CAACU,KAAV,oBAAX,CAMA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,UAAGC,CAAAA,YAAH,MAAGA,YAAH,CAAiBC,SAAjB,MAAiBA,SAAjB,CAA4BC,UAA5B,MAA4BA,UAA5B,CAAwCC,OAAxC,MAAwCA,OAAxC,CAAiDC,KAAjD,MAAiDA,KAAjD,CAAwDC,YAAxD,MAAwDA,YAAxD,CAAsEC,UAAtE,MAAsEA,UAAtE,oBACpB,oBAAC,SAAD,mBACI,oBAAC,IAAD,EAAM,QAAQ,CAAED,YAAhB,eACI,oBAAC,KAAD,EACI,WAAW,CAAC,8BADhB,CAEI,KAAK,CAAEH,UAFX,CAGI,QAAQ,CAAEI,UAHd,EADJ,CADJ,CAQKH,OAAO,cAAG,oBAAC,MAAD,MAAH,cAAgB,wCACnBH,YAAY,EAAIA,YAAY,CAACO,MAAb,CAAsB,CAAtC,eACG,oBAAC,OAAD,EAAS,KAAK,CAAC,eAAf,EACKP,YAAY,CAACQ,GAAb,CAAiB,SAAAC,KAAK,qBACnB,oBAAC,MAAD,EACI,GAAG,CAAEA,KAAK,CAACC,EADf,CAEI,EAAE,CAAED,KAAK,CAACC,EAFd,CAGI,QAAQ,CAAED,KAAK,CAACE,WAHpB,CAII,KAAK,CAAEF,KAAK,CAACG,cAJjB,CAKI,MAAM,CAAEH,KAAK,CAACI,YALlB,CAMI,IAAI,CAAEJ,KAAK,CAACK,YAAN,EAAsBL,KAAK,CAACK,YAAN,CAAmBC,SAAnB,CAA6B,CAA7B,CAAgC,CAAhC,CANhC,CAOI,OAAO,CAAE,IAPb,EADmB,EAAtB,CADL,CAFgB,CAgBnBd,SAAS,EAAIA,SAAS,CAACM,MAAV,CAAmB,CAAhC,eACG,oBAAC,OAAD,EAAS,KAAK,CAAC,iBAAf,EACKN,SAAS,CAACO,GAAV,CAAc,SAAAQ,IAAI,qBACf,oBAAC,MAAD,EACI,GAAG,CAAEA,IAAI,CAACN,EADd,CAEI,EAAE,CAAEM,IAAI,CAACN,EAFb,CAGI,QAAQ,CAAEM,IAAI,CAACL,WAHnB,CAII,KAAK,CAAEK,IAAI,CAACC,aAJhB,CAKI,MAAM,CAAED,IAAI,CAACH,YALjB,CAMI,IAAI,CAAEG,IAAI,CAACE,cAAL,EAAuBF,IAAI,CAACE,cAAL,CAAoBH,SAApB,CAA8B,CAA9B,CAAiC,CAAjC,CANjC,CAOI,OAAO,CAAE,KAPb,EADe,EAAlB,CADL,CAjBgB,CAR5B,CAwCKX,KAAK,eAAI,oBAAC,OAAD,EAAS,IAAI,CAAEA,KAAf,CAAsB,KAAK,CAAC,SAA5B,EAxCd,CAyCKH,SAAS,EAAID,YAAb,EAA6BC,SAAS,CAACM,MAAV,GAAqB,CAAlD,EAAuDP,YAAY,CAACO,MAAb,GAAwB,CAA/E,eAAoF,oBAAC,OAAD,EAAS,IAAI,gBAAb,CAAgC,KAAK,CAAC,SAAtC,EAzCzF,CADoB,EAAxB,CAwDA,cAAeR,CAAAA,eAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm }) => (\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input \n                placeholder=\"Search Movies or TV Shows...\" \n                value={searchTerm} \n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? <Loader /> : <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        /> \n                    ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"TV Show Results\">\n                    {tvResults.map(show => (\n                        <Poster \n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie={false}\n                        />              \n                    ))}\n                </Section>\n            )}\n        </>}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message text={`Nothing Found`} color=\"#95a5a6\" />}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults : PropTypes.array,\n    tvResults : PropTypes.array,\n    searchTerm : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}