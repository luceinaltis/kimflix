{"ast":null,"code":"var _jsxFileName = \"/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/Search/SearchContainer.js\";\nimport React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\nexport default class extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movieResults: null,\n      tvResults: null,\n      searchTerm: \"\",\n      loading: false,\n      error: null\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        searchTerm\n      } = this.state;\n\n      if (searchTerm !== \"\") {\n        this.searchByTerm();\n      }\n    };\n\n    this.updateTerm = event => {\n      const {\n        target\n      } = event;\n      console.log(target);\n    };\n\n    this.searchByTerm = async () => {\n      const {\n        searchTerm\n      } = this.state;\n\n      try {\n        this.setState({\n          loading: true\n        });\n        const {\n          data: {\n            results: movieResults\n          }\n        } = await moviesApi.search(searchTerm);\n        const {\n          data: {\n            results: tvResults\n          }\n        } = await tvApi.search(searchTerm);\n        this.setState({\n          movieResults,\n          tvResults\n        });\n      } catch {\n        this.setState({\n          error: \"Can't find results \"\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      movieResults,\n      tvResults,\n      searchTerm,\n      loading,\n      error\n    } = this.state;\n    return /*#__PURE__*/React.createElement(SearchPresenter, {\n      movieResults: movieResults,\n      tvResults: tvResults,\n      searchTerm: searchTerm,\n      loading: loading,\n      error: error,\n      handleSubmit: this.handleSubmit,\n      updateTerm: this.updateTerm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/Search/SearchContainer.js"],"names":["React","SearchPresenter","moviesApi","tvApi","Component","state","movieResults","tvResults","searchTerm","loading","error","handleSubmit","event","preventDefault","searchByTerm","updateTerm","target","console","log","setState","data","results","search","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,WAAjC;AAEA,eAAe,cAAcH,KAAK,CAACI,SAApB,CAA8B;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,SAAS,EAAE,IAFP;AAGJC,MAAAA,UAAU,EAAE,EAHR;AAIJC,MAAAA,OAAO,EAAE,KAJL;AAKJC,MAAAA,KAAK,EAAE;AALH,KADiC;;AAAA,SASzCC,YATyC,GASzBC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEL,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AACA,UAAGG,UAAU,KAAK,EAAlB,EAAsB;AAClB,aAAKM,YAAL;AACH;AACJ,KAfwC;;AAAA,SAiBzCC,UAjByC,GAiB3BH,KAAD,IAAW;AACpB,YAAM;AAAEI,QAAAA;AAAF,UAAaJ,KAAnB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACH,KApBwC;;AAAA,SAsBzCF,YAtByC,GAsB1B,YAAY;AACvB,YAAM;AAAEN,QAAAA;AAAF,UAAiB,KAAKH,KAA5B;;AAEA,UAAI;AACA,aAAKc,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAG;AAAZ,SAAd;AACA,cAAM;AAAEW,UAAAA,IAAI,EAAG;AAAEC,YAAAA,OAAO,EAAGf;AAAZ;AAAT,YAAuC,MAAMJ,SAAS,CAACoB,MAAV,CAAiBd,UAAjB,CAAnD;AACA,cAAM;AAAEY,UAAAA,IAAI,EAAG;AAAEC,YAAAA,OAAO,EAAGd;AAAZ;AAAT,YAAoC,MAAMJ,KAAK,CAACmB,MAAN,CAAad,UAAb,CAAhD;AACA,aAAKW,QAAL,CAAc;AAAEb,UAAAA,YAAF;AAAgBC,UAAAA;AAAhB,SAAd;AACH,OALD,CAKE,MAAM;AACJ,aAAKY,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAE;AAAT,SAAd;AACH,OAPD,SAOU;AACN,aAAKS,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAG;AAAZ,SAAd;AACH;AACJ,KAnCwC;AAAA;;AAqCzCc,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEjB,MAAAA,YAAF;AAAgBC,MAAAA,SAAhB;AAA2BC,MAAAA,UAA3B;AAAuCC,MAAAA,OAAvC;AAAgDC,MAAAA;AAAhD,QAA0D,KAAKL,KAArE;AAEA,wBACI,oBAAC,eAAD;AACI,MAAA,YAAY,EAAEC,YADlB;AAEI,MAAA,SAAS,EAAEC,SAFf;AAGI,MAAA,UAAU,EAAEC,UAHhB;AAII,MAAA,OAAO,EAAEC,OAJb;AAKI,MAAA,KAAK,EAAEC,KALX;AAMI,MAAA,YAAY,EAAE,KAAKC,YANvB;AAOI,MAAA,UAAU,EAAE,KAAKI,UAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAWH;;AAnDwC","sourcesContent":["import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null,\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const { target } = event;\n        console.log(target);\n    };\n            \n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n\n        try {\n            this.setState({ loading : true });\n            const { data : { results : movieResults }} = await moviesApi.search(searchTerm);\n            const { data : { results : tvResults }} = await tvApi.search(searchTerm);\n            this.setState({ movieResults, tvResults });\n        } catch {\n            this.setState({ error: \"Can't find results \"});\n        } finally {\n            this.setState({ loading : false });\n        }\n    };\n\n    render() {\n        const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n\n        return (\n            <SearchPresenter \n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                loading={loading}\n                error={error}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        )\n    };\n}"]},"metadata":{},"sourceType":"module"}