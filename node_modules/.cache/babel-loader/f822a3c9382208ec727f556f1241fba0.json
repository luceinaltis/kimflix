{"ast":null,"code":"var _jsxFileName = \"/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/Search/SearchPresenter.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm\n}) => /*#__PURE__*/React.createElement(Container, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Form, {\n  onSubmit: handleSubmit,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(Input, {\n  placeholder: \"Search Movies or TV Shows...\",\n  value: searchTerm,\n  onChange: updateTerm,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 13\n  }\n})), loading ? /*#__PURE__*/React.createElement(Loader, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 20\n  }\n}) : /*#__PURE__*/React.createElement(React.Fragment, null, movieResults && movieResults.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"Movie Results\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 17\n  }\n}, movieResults.map(movie => /*#__PURE__*/React.createElement(Poster, {\n  key: movie.id,\n  id: movie.id,\n  imageUrl: movie.poster_path,\n  title: movie.original_title,\n  rating: movie.vote_average,\n  year: movie.release_date && movie.release_date.substring(0, 4),\n  isMovie: true,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }\n}))), tvResults && tvResults.length > 0 && /*#__PURE__*/React.createElement(Section, {\n  title: \"TV Show Results\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }\n}, tvResults.map(show => /*#__PURE__*/React.createElement(Poster, {\n  key: show.id,\n  id: show.id,\n  imageUrl: show.poster_path,\n  title: show.original_name,\n  rating: show.vote_average,\n  year: show.first_air_date && show.first_air_date.substring(0, 4),\n  isMovie: false,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 25\n  }\n})))), error && /*#__PURE__*/React.createElement(Message, {\n  text: error,\n  color: \"#e74c3c\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 19\n  }\n}), tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && /*#__PURE__*/React.createElement(Message, {\n  text: `Nothing Found`,\n  color: \"#95a5a6\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 94\n  }\n}));\n\nSearchPresenter.propTypes = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\nexport default SearchPresenter;","map":{"version":3,"sources":["/home/kihwan/Desktop/nomadCoder/nomflix/src/Routes/Search/SearchPresenter.js"],"names":["React","PropTypes","styled","Loader","Section","Message","Poster","Container","div","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","loading","error","handleSubmit","updateTerm","length","map","movie","id","poster_path","original_title","vote_average","release_date","substring","show","original_name","first_air_date","propTypes","array","string","bool","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n    padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, searchTerm, loading, error, handleSubmit, updateTerm }) => (\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <Input \n                placeholder=\"Search Movies or TV Shows...\" \n                value={searchTerm} \n                onChange={updateTerm}\n            />\n        </Form>\n        {loading ? <Loader /> : <>\n            {movieResults && movieResults.length > 0 && (\n                <Section title=\"Movie Results\">\n                    {movieResults.map(movie => (\n                        <Poster \n                            key={movie.id}\n                            id={movie.id}\n                            imageUrl={movie.poster_path}\n                            title={movie.original_title}\n                            rating={movie.vote_average}\n                            year={movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie={true}\n                        /> \n                    ))}\n                </Section>\n            )}\n            {tvResults && tvResults.length > 0 && (\n                <Section title=\"TV Show Results\">\n                    {tvResults.map(show => (\n                        <Poster \n                            key={show.id}\n                            id={show.id}\n                            imageUrl={show.poster_path}\n                            title={show.original_name}\n                            rating={show.vote_average}\n                            year={show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie={false}\n                        />              \n                    ))}\n                </Section>\n            )}\n        </>}\n        {error && <Message text={error} color=\"#e74c3c\" />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && <Message text={`Nothing Found`} color=\"#95a5a6\" />}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults : PropTypes.array,\n    tvResults : PropTypes.array,\n    searchTerm : PropTypes.string,\n    loading : PropTypes.bool.isRequired,\n    error : PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;"]},"metadata":{},"sourceType":"module"}